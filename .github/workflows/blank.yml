# <main class="main-content">
      <div class="user-info">
        <div id="user-avatar" class="avatar"></div>
        <div id="user-name" class="name">Loading...</div>
      </div>
      
      <div class="action-buttons">
        <button id="main-button" class="button primary">Main Action</button>
        <button id="secondary-button" class="button">Secondary Action</button>
      </div>
      
      <div class="feature-cards">
        <div class="card">
          <div class="card-icon">üìù</div>
          <h3>Feature One</h3>
          <p>Description of the first feature of your mini app.</p>
        </div>
        <div class="card">
          <div class="card-icon">üîç</div>
          <h3>Feature Two</h3>
          <p>Description of the second feature of your mini app.</p>
        </div>
        <div class="card">
          <div class="card-icon">üöÄ</div>
          <h3>Feature Three</h3>
          <p>Description of the third feature of your mini app.</p>
        </div>
      </div>
    </main>
    
    <footer class="footer">
      <p>¬© 2025 Your Mini App</p>
    </footer>
  </div>
  
  <script src="app.js"></script>
</body>
</html>:root {
  --tg-theme-bg-color: #ffffff;
  --tg-theme-text-color: #000000;
  --tg-theme-hint-color: #999999;
  --tg-theme-link-color: #2678b6;
  --tg-theme-button-color: #2678b6;
  --tg-theme-button-text-color: #ffffff;
  --tg-theme-secondary-bg-color: #f0f0f0;
}

body {
  font-family: "Segoe UI", sans-serif;
  text-align: center;
  background: var(--tg-theme-bg-color);
  color: var(--tg-theme-text-color);
  margin: 0;
  padding: 0;
  transition: all 0.3s ease;
}

#app {
  max-width: 800px;
  margin: 0 auto;
  padding: 20px;
}

.header {
  margin-bottom: 30px;
}

.header h1 {
  font-size: 24px;
  margin: 0;
}

.main-content {
  display: flex;
  flex-direction: column;
  gap: 30px;
}

.user-info {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 15px;
  margin-bottom: 20px;
}

.avatar {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  background-color: var(--tg-theme-secondary-bg-color);
  background-size: cover;
  background-position: center;
}

.name {
  font-size: 18px;
  font-weight: 600;
}

.action-buttons {
  display: flex;
  flex-direction: column;
  gap: 10px;
  max-width: 300px;
  margin: 0 auto;
}

.button {
  padding: 12px 20px;
  border-radius: 8px;
  border: none;
  font-size: 16px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.button.primary {
  background-color: var(--tg-theme-button-color);
  color: var(--tg-theme-button-text-color);
}

.button:not(.primary) {
  background-color: var(--tg-theme-secondary-bg-color);
  color: var(--tg-theme-text-color);
}

.button:hover {
  opacity: 0.9;
  transform: translateY(-2px);
}

.feature-cards {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 20px;
  margin-top: 20px;
}

.card {
  background-color: var(--tg-theme-secondary-bg-color);
  border-radius: 12px;
  padding: 20px;
  text-align: center;
  transition: transform 0.3s ease;
}

.card:hover {
  transform: translateY(-5px);
}

.card-icon {
  font-size: 32px;
  margin-bottom: 10px;
}

.card h3 {
  margin: 10px 0;
  font-size: 18px;
}

.card p {
  color: var(--tg-theme-hint-color);
  font-size: 14px;
  margin: 0;
}

.footer {
  margin-top: 40px;
  font-size: 14px;
  color: var(--tg-theme-hint-color);
}

@media (max-width: 600px) {
  .feature-cards {
    grid-template-columns: 1fr;
  }

  #app {
    padding: 15px;
  }
}<main class="main-content">
      <div class="user-info">
        <div id="user-avatar" class="avatar"></div>
        <div id="user-name" class="name">Loading...</div>
      </div>
      
      <div class="action-buttons">
        <button id="main-button" class="button primary">Main Action</button>
        <button id="secondary-button" class="button">Secondary Action</button>
      </div>
      
      <div class="feature-cards">
        <div class="card">
          <div class="card-icon">üìù</div>
          <h3>Feature One</h3>
          <p>Description of the first feature of your mini app.</p>
        </div>
        <div class="card">
          <div class="card-icon">üîç</div>
          <h3>Feature Two</h3>
          <p>Description of the second feature of your mini app.</p>
        </div>
        <div class="card">
          <div class="card-icon">üöÄ</div>
          <h3>Feature Three</h3>
          <p>Description of the third feature of your mini app.</p>
        </div>
      </div>
    </main>
    
    <footer class="footer">
      <p>¬© 2025 Your Mini App</p>
    </footer>
  </div>
  
  <script src="app.js"></script>
</body>
</html>:root {
  --tg-theme-bg-color: #ffffff;
  --tg-theme-text-color: #000000;
  --tg-theme-hint-color: #999999;
  --tg-theme-link-color: #2678b6;
  --tg-theme-button-color: #2678b6;
  --tg-theme-button-text-color: #ffffff;
  --tg-theme-secondary-bg-color: #f0f0f0;
}

body {
  font-family: "Segoe UI", sans-serif;
  text-align: center;
  background: var(--tg-theme-bg-color);
  color: var(--tg-theme-text-color);
  margin: 0;
  padding: 0;
  transition: all 0.3s ease;
}

#app {
  max-width: 800px;
  margin: 0 auto;
  padding: 20px;
}

.header {
  margin-bottom: 30px;
}

.header h1 {
  font-size: 24px;
  margin: 0;
}

.main-content {
  display: flex;
  flex-direction: column;
  gap: 30px;
}

.user-info {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 15px;
  margin-bottom: 20px;
}

.avatar {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  background-color: var(--tg-theme-secondary-bg-color);
  background-size: cover;
  background-position: center;
}

.name {
  font-size: 18px;
  font-weight: 600;
}

.action-buttons {
  display: flex;
  flex-direction: column;
  gap: 10px;
  max-width: 300px;
  margin: 0 auto;
}

.button {
  padding: 12px 20px;
  border-radius: 8px;
  border: none;
  font-size: 16px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.button.primary {
  background-color: var(--tg-theme-button-color);
  color: var(--tg-theme-button-text-color);
}

.button:not(.primary) {
  background-color: var(--tg-theme-secondary-bg-color);
  color: var(--tg-theme-text-color);
}

.button:hover {
  opacity: 0.9;
  transform: translateY(-2px);
}

.feature-cards {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 20px;
  margin-top: 20px;
}

.card {
  background-color: var(--tg-theme-secondary-bg-color);
  border-radius: 12px;
  padding: 20px;
  text-align: center;
  transition: transform 0.3s ease;
}

.card:hover {
  transform: translateY(-5px);
}

.card-icon {
  font-size: 32px;
  margin-bottom: 10px;
}

.card h3 {
  margin: 10px 0;
  font-size: 18px;
}

.card p {
  color: var(--tg-theme-hint-color);
  font-size: 14px;
  margin: 0;
}

.footer {
  margin-top: 40px;
  font-size: 14px;
  color: var(--tg-theme-hint-color);
}

@media (max-width: 600px) {
  .feature-cards {
    grid-template-columns: 1fr;
  }

  #app {
    padding: 15px;
  }
}This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
